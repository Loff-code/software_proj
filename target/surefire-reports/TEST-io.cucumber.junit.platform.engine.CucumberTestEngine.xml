<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="io.cucumber.junit.platform.engine.CucumberTestEngine" time="0.202" tests="32" errors="20" skipped="0" failures="2">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj/target/test-classes:/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj/target/classes:/Users/alizeb/.m2/repository/io/cucumber/cucumber-java/7.20.1/cucumber-java-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-core/7.20.1/cucumber-core-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-gherkin/7.20.1/cucumber-gherkin-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.20.1/cucumber-gherkin-messages-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/gherkin/28.0.0/gherkin-28.0.0.jar:/Users/alizeb/.m2/repository/io/cucumber/messages/24.1.0/messages-24.1.0.jar:/Users/alizeb/.m2/repository/io/cucumber/testng-xml-formatter/0.2.0/testng-xml-formatter-0.2.0.jar:/Users/alizeb/.m2/repository/io/cucumber/query/12.2.0/query-12.2.0.jar:/Users/alizeb/.m2/repository/io/cucumber/tag-expressions/6.1.0/tag-expressions-6.1.0.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-expressions/17.1.0/cucumber-expressions-17.1.0.jar:/Users/alizeb/.m2/repository/io/cucumber/datatable/7.20.1/datatable-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-plugin/7.20.1/cucumber-plugin-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/docstring/7.20.1/docstring-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/html-formatter/21.7.0/html-formatter-21.7.0.jar:/Users/alizeb/.m2/repository/io/cucumber/junit-xml-formatter/0.5.0/junit-xml-formatter-0.5.0.jar:/Users/alizeb/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/alizeb/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.20.1/cucumber-junit-platform-engine-7.20.1.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-engine/1.11.2/junit-platform-engine-1.11.2.jar:/Users/alizeb/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-commons/1.11.2/junit-platform-commons-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite/1.11.2/junit-platform-suite-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite-api/1.11.2/junit-platform-suite-api-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.11.2/junit-platform-suite-engine-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.11.2/junit-platform-suite-commons-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-launcher/1.11.2/junit-platform-launcher-1.11.2.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-picocontainer/7.20.1/cucumber-picocontainer-7.20.1.jar:/Users/alizeb/.m2/repository/org/picocontainer/picocontainer/2.15/picocontainer-2.15.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.2/junit-jupiter-5.11.2.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.2/junit-jupiter-api-5.11.2.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.2/junit-jupiter-params-5.11.2.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.2/junit-jupiter-engine-5.11.2.jar:/Users/alizeb/.m2/repository/org/mockito/mockito-core/5.15.2/mockito-core-5.15.2.jar:/Users/alizeb/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/alizeb/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/alizeb/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-controls/23-ea+3/javafx-controls-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-controls/23-ea+3/javafx-controls-23-ea+3-mac-aarch64.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-graphics/23-ea+3/javafx-graphics-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-graphics/23-ea+3/javafx-graphics-23-ea+3-mac-aarch64.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-base/23-ea+3/javafx-base-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-base/23-ea+3/javafx-base-23-ea+3-mac-aarch64.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-fxml/23-ea+3/javafx-fxml-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-fxml/23-ea+3/javafx-fxml-23-ea+3-mac-aarch64.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="Europe/Copenhagen"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="DK"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj/target/surefire/surefirebooter-20250505005826484_3.jar /Users/alizeb/Desktop/Semester 4/Software engineering/software_proj/target/surefire 2025-05-05T00-58-26_439-jvmRun1 surefire-20250505005826484_1tmp surefire_0-20250505005826484_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj/target/test-classes:/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj/target/classes:/Users/alizeb/.m2/repository/io/cucumber/cucumber-java/7.20.1/cucumber-java-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-core/7.20.1/cucumber-core-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-gherkin/7.20.1/cucumber-gherkin-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.20.1/cucumber-gherkin-messages-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/gherkin/28.0.0/gherkin-28.0.0.jar:/Users/alizeb/.m2/repository/io/cucumber/messages/24.1.0/messages-24.1.0.jar:/Users/alizeb/.m2/repository/io/cucumber/testng-xml-formatter/0.2.0/testng-xml-formatter-0.2.0.jar:/Users/alizeb/.m2/repository/io/cucumber/query/12.2.0/query-12.2.0.jar:/Users/alizeb/.m2/repository/io/cucumber/tag-expressions/6.1.0/tag-expressions-6.1.0.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-expressions/17.1.0/cucumber-expressions-17.1.0.jar:/Users/alizeb/.m2/repository/io/cucumber/datatable/7.20.1/datatable-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-plugin/7.20.1/cucumber-plugin-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/docstring/7.20.1/docstring-7.20.1.jar:/Users/alizeb/.m2/repository/io/cucumber/html-formatter/21.7.0/html-formatter-21.7.0.jar:/Users/alizeb/.m2/repository/io/cucumber/junit-xml-formatter/0.5.0/junit-xml-formatter-0.5.0.jar:/Users/alizeb/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/alizeb/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.20.1/cucumber-junit-platform-engine-7.20.1.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-engine/1.11.2/junit-platform-engine-1.11.2.jar:/Users/alizeb/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-commons/1.11.2/junit-platform-commons-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite/1.11.2/junit-platform-suite-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite-api/1.11.2/junit-platform-suite-api-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.11.2/junit-platform-suite-engine-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.11.2/junit-platform-suite-commons-1.11.2.jar:/Users/alizeb/.m2/repository/org/junit/platform/junit-platform-launcher/1.11.2/junit-platform-launcher-1.11.2.jar:/Users/alizeb/.m2/repository/io/cucumber/cucumber-picocontainer/7.20.1/cucumber-picocontainer-7.20.1.jar:/Users/alizeb/.m2/repository/org/picocontainer/picocontainer/2.15/picocontainer-2.15.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.2/junit-jupiter-5.11.2.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.2/junit-jupiter-api-5.11.2.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.2/junit-jupiter-params-5.11.2.jar:/Users/alizeb/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.2/junit-jupiter-engine-5.11.2.jar:/Users/alizeb/.m2/repository/org/mockito/mockito-core/5.15.2/mockito-core-5.15.2.jar:/Users/alizeb/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/alizeb/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/alizeb/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-controls/23-ea+3/javafx-controls-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-controls/23-ea+3/javafx-controls-23-ea+3-mac-aarch64.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-graphics/23-ea+3/javafx-graphics-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-graphics/23-ea+3/javafx-graphics-23-ea+3-mac-aarch64.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-base/23-ea+3/javafx-base-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-base/23-ea+3/javafx-base-23-ea+3-mac-aarch64.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-fxml/23-ea+3/javafx-fxml-23-ea+3.jar:/Users/alizeb/.m2/repository/org/openjfx/javafx-fxml/23-ea+3/javafx-fxml-23-ea+3-mac-aarch64.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/alizeb"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj/target/surefire/surefirebooter-20250505005826484_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="23.0.2"/>
    <property name="user.name" value="alizeb"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.4.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/alizeb/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/73/6q67ylrx1vl6gkb3kbny6v940000gn/T/"/>
    <property name="java.version" value="23.0.2"/>
    <property name="user.dir" value="/Users/alizeb/Desktop/Semester 4/Software engineering/software_proj"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/alizeb/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="23.0.2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="67.0"/>
  </properties>
  <testcase name="Test date - Test mock date is returned" classname="Test date" time="0.06">
    <error message="The step &apos;the system date is mocked&apos; and 1 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the system date is mocked&quot;)&#10;public void theSystemDateIsMocked() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the system date should be {string}&quot;)&#10;public void theSystemDateShouldBe(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the system date is mocked' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the system date is mocked")
public void theSystemDateIsMocked() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the system date should be {string}")
public void theSystemDateShouldBe(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: Test mock date is returned          &amp#27;[90m# features/TestDate.feature:3&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe system date is mocked&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe system date should be "2025-05-03"&amp#27;[0m
]]></system-out>
    <system-err><![CDATA[May 05, 2025 12:58:26 AM io.cucumber.junit.platform.engine.DiscoverySelectorResolver warnWhenCucumberFeaturesPropertyIsUsed
WARNING: Discovering tests using the cucumber.features property. Other discovery selectors are ignored!

This is a work around for the limited JUnit 5 support in Maven and Gradle. Please request/upvote/sponsor/ect better support for JUnit 5 discovery selectors. For details see: https://github.com/cucumber/cucumber-jvm/pull/2498

If you are using the JUnit 5 Suite Engine, Platform Launcher API or Console Launcher you should not use this property. Please consult the JUnit 5 documentation on test selection.
]]></system-err>
  </testcase>
  <testcase name="Add activity to project - Employee adds an activity successfully" classname="Add activity to project" time="0.012">
    <failure message="expected: &lt;true&gt; but was: &lt;false&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <true> but was: <false>
	at hellocucumber.AddActivitySteps.the_user_adds_an_activity_with_name_budgeted_time_hours_start_week_end_week_to_project(AddActivitySteps.java:29)
	at ✽.the user adds an activity with name "A", budgeted time 1 hours, start week 1, end week 4 to project "P"(file:///Users/alizeb/Desktop/Semester%204/Software%20engineering/software_proj/features/addActivity.feature:9)
]]></failure>
    <system-out><![CDATA[
Scenario: Employee adds an activity successfully                                                               &amp#27;[90m# features/addActivity.feature:5&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                                                  &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mproject with name &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                                             &amp#27;[90m# hellocucumber.CreateProjectSteps.project_with_name_exists(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe project is created with the name &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m                                                                &amp#27;[90m# hellocucumber.CreateProjectSteps.the_project_is_created_with_the_name(java.lang.String)&amp#27;[0m
  &amp#27;[31mWhen &amp#27;[0m&amp#27;[31mthe user adds an activity with name &amp#27;[0m&amp#27;[31m&amp#27;[1m"A"&amp#27;[0m&amp#27;[31m, budgeted time &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m hours, start week &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m, end week &amp#27;[0m&amp#27;[31m&amp#27;[1m4&amp#27;[0m&amp#27;[31m to project &amp#27;[0m&amp#27;[31m&amp#27;[1m"P"&amp#27;[0m &amp#27;[90m# hellocucumber.AddActivitySteps.the_user_adds_an_activity_with_name_budgeted_time_hours_start_week_end_week_to_project(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:31)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:183)
	at hellocucumber.AddActivitySteps.the_user_adds_an_activity_with_name_budgeted_time_hours_start_week_end_week_to_project(AddActivitySteps.java:29)
	at ✽.the user adds an activity with name "A", budgeted time 1 hours, start week 1, end week 4 to project "P"(file:///Users/alizeb/Desktop/Semester%204/Software%20engineering/software_proj/features/addActivity.feature:9)
&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe activity &amp#27;[0m&amp#27;[36m&amp#27;[1m"A"&amp#27;[0m&amp#27;[36m is added to project &amp#27;[0m&amp#27;[36m&amp#27;[1m"P"&amp#27;[0m                                                                &amp#27;[90m# hellocucumber.AddActivitySteps.the_activity_is_added_to_project(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Add project leader - User assigns a project leader successfully" classname="Add project leader" time="0.006">
    <system-out><![CDATA[
Scenario: User assigns a project leader successfully                      &amp#27;[90m# features/addProjectLeader.feature:9&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                            &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_exists(java.lang.String)&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                             &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                    &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m is not already a leader of the project&amp#27;[0m            &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_is_not_already_a_leader_of_the_project(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user assigns &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m as the project leader to the project &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_assigns_as_the_project_leader_to_the_project(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m is set as the leader of project &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m              &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_project_leader_of_the_project_is(java.lang.String,int)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Add project leader - User assigns a project leader who is already assigned" classname="Add project leader" time="0.008">
    <system-out><![CDATA[
Scenario: User assigns a project leader who is already assigned                            &amp#27;[90m# features/addProjectLeader.feature:15&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                             &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_exists(java.lang.String)&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                              &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m is already a project leader to project &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m                       &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_is_already_a_project_leader_to_project(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Hamz"&amp#27;[0m&amp#27;[32m tries to assign &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m as the project leader to project &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m again&amp#27;[0m &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_tries_to_assign_as_the_project_leader_to_project_again(java.lang.String,java.lang.String,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32man error message happens&amp#27;[0m                                                            &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.an_error_message_happens()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Add project leader - User assigns a non existing user as project leader" classname="Add project leader" time="0.003">
    <system-out><![CDATA[
Scenario: User assigns a non existing user as project leader      &amp#27;[90m# features/addProjectLeader.feature:20&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                    &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_exists(java.lang.String)&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                     &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                            &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ekke"&amp#27;[0m&amp#27;[32m does not exist&amp#27;[0m                            &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_does_not_exist(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user assigns &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ekke"&amp#27;[0m&amp#27;[32m as project leader to project &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_assigns_as_project_leader_to_project(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32man error message happens about the user not existing&amp#27;[0m       &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.an_error_message_happens_about_the_user_not_existing()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Add project leader - User assigns a project leader to a non existing project" classname="Add project leader" time="0.003">
    <system-out><![CDATA[
Scenario: User assigns a project leader to a non existing project                             &amp#27;[90m# features/addProjectLeader.feature:26&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                                &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_exists(java.lang.String)&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                                 &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25002&amp#27;[0m&amp#27;[32m does not exist&amp#27;[0m                                              &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_project_with_id_does_not_exist(int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user assigns &amp#27;[0m&amp#27;[32m&amp#27;[1m"Huba"&amp#27;[0m&amp#27;[32m as project leader to project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25002&amp#27;[0m&amp#27;[32m that does not exist&amp#27;[0m &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.the_user_assigns_as_project_leader_to_project_with_id_that_does_not_exist(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32man error message happens about the project not existing&amp#27;[0m                                &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.an_error_message_happens_about_the_project_not_existing()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create activity - User adds an activity" classname="Create activity" time="0.004">
    <error message="The step &apos;that the employee Bob is logged in&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;that the employee Bob is logged in&quot;)&#10;public void thatTheEmployeeBobIsLoggedIn() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;that a project called {string}&quot;)&#10;public void thatAProjectCalled(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;an activity called {string} is added&quot;)&#10;public void anActivityCalledIsAdded(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the activity is in the project {string}&quot;)&#10;public void theActivityIsInTheProject(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'that the employee Bob is logged in' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("that the employee Bob is logged in")
public void thatTheEmployeeBobIsLoggedIn() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("that a project called {string}")
public void thatAProjectCalled(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("an activity called {string} is added")
public void anActivityCalledIsAdded(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the activity is in the project {string}")
public void theActivityIsInTheProject(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User adds an activity             &amp#27;[90m# features/createActivity.feature:8&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthat the employee Bob is logged in&amp#27;[0m
  &amp#27;[36mGiven &amp#27;[0m&amp#27;[36mthat a project called "Cat"&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36man activity called "Part1" is added&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe activity is in the project "Cat"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create activity - Employee adds an activity with an empty name" classname="Create activity" time="0.003">
    <error message="The step &apos;that the employee Bob is logged in&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;that the employee Bob is logged in&quot;)&#10;public void thatTheEmployeeBobIsLoggedIn() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;that a project called {string}&quot;)&#10;public void thatAProjectCalled(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;an activity called {string} is added&quot;)&#10;public void anActivityCalledIsAdded(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'that the employee Bob is logged in' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("that the employee Bob is logged in")
public void thatTheEmployeeBobIsLoggedIn() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("that a project called {string}")
public void thatAProjectCalled(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("an activity called {string} is added")
public void anActivityCalledIsAdded(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: Employee adds an activity with an empty name &amp#27;[90m# features/createActivity.feature:14&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthat the employee Bob is logged in&amp#27;[0m
  &amp#27;[36mGiven &amp#27;[0m&amp#27;[36mthat a project called "Cat"&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36man activity called "" is added&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message happens&amp#27;[0m                        &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.an_error_message_happens()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create activity - Employee adds an activity which is already created" classname="Create activity" time="0.004">
    <error message="The step &apos;that the employee Bob is logged in&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;that the employee Bob is logged in&quot;)&#10;public void thatTheEmployeeBobIsLoggedIn() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;that a project called {string} is created&quot;)&#10;public void thatAProjectCalledIsCreated(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;an activity called {string} is already present&quot;)&#10;public void anActivityCalledIsAlreadyPresent(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;an activity called {string} is added&quot;)&#10;public void anActivityCalledIsAdded(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'that the employee Bob is logged in' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("that the employee Bob is logged in")
public void thatTheEmployeeBobIsLoggedIn() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("that a project called {string} is created")
public void thatAProjectCalledIsCreated(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("an activity called {string} is already present")
public void anActivityCalledIsAlreadyPresent(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("an activity called {string} is added")
public void anActivityCalledIsAdded(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: Employee adds an activity which is already created &amp#27;[90m# features/createActivity.feature:20&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthat the employee Bob is logged in&amp#27;[0m
  &amp#27;[36mGiven &amp#27;[0m&amp#27;[36mthat a project called "Cat" is created&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36man activity called "part1" is already present&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36man activity called "part1" is added&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message happens&amp#27;[0m                              &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.an_error_message_happens()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create Project - User creates a project successfully" classname="Create Project" time="0.003">
    <system-out><![CDATA[
Scenario: User creates a project successfully                   &amp#27;[90m# features/createProject.feature:5&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                   &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user creates a project with the name &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m&amp#27;[32m, client &amp#27;[0m&amp#27;[32m&amp#27;[1m"a"&amp#27;[0m &amp#27;[90m# hellocucumber.CreateProjectSteps.the_user_creates_a_project_with_the_name_client(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe project is created with the name &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m                 &amp#27;[90m# hellocucumber.CreateProjectSteps.the_project_is_created_with_the_name(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create Project - User fails to create project with no name" classname="Create Project" time="0.003">
    <system-out><![CDATA[
Scenario: User fails to create project with no name            &amp#27;[90m# features/createProject.feature:10&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                  &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user creates a project with the name &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m, client &amp#27;[0m&amp#27;[32m&amp#27;[1m"a"&amp#27;[0m &amp#27;[90m# hellocucumber.CreateProjectSteps.the_user_creates_a_project_with_the_name_client(java.lang.String,java.lang.String)&amp#27;[0m
namenull
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe project &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m is not created&amp#27;[0m                           &amp#27;[90m# hellocucumber.CreateProjectSteps.the_project_is_not_created(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create Project - User fails to create project without client" classname="Create Project" time="0.002">
    <system-out><![CDATA[
Scenario: User fails to create project without client          &amp#27;[90m# features/createProject.feature:16&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                  &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user creates a project with the name &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m&amp#27;[32m, client &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m &amp#27;[90m# hellocucumber.CreateProjectSteps.the_user_creates_a_project_with_the_name_client(java.lang.String,java.lang.String)&amp#27;[0m
namenull
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe project &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m&amp#27;[32m is not created&amp#27;[0m                          &amp#27;[90m# hellocucumber.CreateProjectSteps.the_project_is_not_created(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create Project - User fails to create project with identical name" classname="Create Project" time="0.003">
    <system-out><![CDATA[
Scenario: User fails to create project with identical name      &amp#27;[90m# features/createProject.feature:22&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                   &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mproject with name &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                              &amp#27;[90m# hellocucumber.CreateProjectSteps.project_with_name_exists(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user creates a project with the name &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m&amp#27;[32m, client &amp#27;[0m&amp#27;[32m&amp#27;[1m"a"&amp#27;[0m &amp#27;[90m# hellocucumber.CreateProjectSteps.the_user_creates_a_project_with_the_name_client(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthere are no duplicates of the project &amp#27;[0m&amp#27;[32m&amp#27;[1m"P"&amp#27;[0m               &amp#27;[90m# hellocucumber.CreateProjectSteps.there_are_no_duplicates_of_the_project(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Edit data - User edits registered hours" classname="Edit data" time="0.004">
    <error message="The step &apos;The user is logged in&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user is logged in&quot;)&#10;public void theUserIsLoggedIn() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user has registered {int} hours on an activity called {string} in project {int}&quot;)&#10;public void theUserHasRegisteredHoursOnAnActivityCalledInProject(Integer int1, String string, Integer int2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user changes the registered from {int} hours to {int} hours on the {string} activity&quot;)&#10;public void theUserChangesTheRegisteredFromHoursToHoursOnTheActivity(Integer int1, Integer int2, String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the system updates the registered hours to {int} hours on the {string} activity&quot;)&#10;public void theSystemUpdatesTheRegisteredHoursToHoursOnTheActivity(Integer int1, String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'The user is logged in' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user is logged in")
public void theUserIsLoggedIn() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the user has registered {int} hours on an activity called {string} in project {int}")
public void theUserHasRegisteredHoursOnAnActivityCalledInProject(Integer int1, String string, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user changes the registered from {int} hours to {int} hours on the {string} activity")
public void theUserChangesTheRegisteredFromHoursToHoursOnTheActivity(Integer int1, Integer int2, String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the system updates the registered hours to {int} hours on the {string} activity")
public void theSystemUpdatesTheRegisteredHoursToHoursOnTheActivity(Integer int1, String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User edits registered hours                                                 &amp#27;[90m# features/editActivity.feature:6&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user is logged in&amp#27;[0m
  &amp#27;[36mGiven &amp#27;[0m&amp#27;[36mthe user has registered 3 hours on an activity called "Test" in project 25002&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user changes the registered from 3 hours to 5 hours on the "Test" activity&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe system updates the registered hours to 5 hours on the "Test" activity&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Edit data - User try to edit a non existing activity" classname="Edit data" time="0.002">
    <error message="The step &apos;The user is logged in&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user is logged in&quot;)&#10;public void theUserIsLoggedIn() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the activity {string} does not exist in the project {int}&quot;)&#10;public void theActivityDoesNotExistInTheProject(String string, Integer int1) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to edit hours for the {string} activity&quot;)&#10;public void theUserTriesToEditHoursForTheActivity(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'The user is logged in' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user is logged in")
public void theUserIsLoggedIn() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the activity {string} does not exist in the project {int}")
public void theActivityDoesNotExistInTheProject(String string, Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to edit hours for the {string} activity")
public void theUserTriesToEditHoursForTheActivity(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User try to edit a non existing activity                &amp#27;[90m# features/editActivity.feature:12&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user is logged in&amp#27;[0m
  &amp#27;[36mGiven &amp#27;[0m&amp#27;[36mthe activity "Test 1" does not exist in the project 25003&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to edit hours for the "Test 1" activity&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message happens&amp#27;[0m                                   &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.an_error_message_happens()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Edit data - User try to edit registered time with an invalid input" classname="Edit data" time="0.003">
    <error message="The step &apos;the user has registered 3 hours on an activity called &quot;Test 2&quot;&apos; and 1 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the user has registered {int} hours on an activity called {string}&quot;)&#10;public void theUserHasRegisteredHoursOnAnActivityCalled(Integer int1, String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to change the registered hours to {int} on the activity {string}&quot;)&#10;public void theUserTriesToChangeTheRegisteredHoursToOnTheActivity(Integer int1, String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the user has registered 3 hours on an activity called "Test 2"' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the user has registered {int} hours on an activity called {string}")
public void theUserHasRegisteredHoursOnAnActivityCalled(Integer int1, String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to change the registered hours to {int} on the activity {string}")
public void theUserTriesToChangeTheRegisteredHoursToOnTheActivity(Integer int1, String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User try to edit registered time with an invalid input                    &amp#27;[90m# features/editActivity.feature:18&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                       &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe user has registered 3 hours on an activity called "Test 2"&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to change the registered hours to -2 on the activity "Test 2"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message happens&amp#27;[0m                                                     &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.an_error_message_happens()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Edit Project - Successfully edit a project&apos;s name" classname="Edit Project" time="0.003">
    <error message="The step &apos;a project with project number &quot;24001&quot; exists&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;a project with project number {string} exists&quot;)&#10;public void aProjectWithProjectNumberExists(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;I update the project&apos;s name to {string}&quot;)&#10;public void iUpdateTheProjectSNameTo(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the project&apos;s name should be {string}&quot;)&#10;public void theProjectSNameShouldBe(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'a project with project number "24001" exists' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("a project with project number {string} exists")
public void aProjectWithProjectNumberExists(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I update the project's name to {string}")
public void iUpdateTheProjectSNameTo(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the project's name should be {string}")
public void theProjectSNameShouldBe(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: Successfully edit a project's name             &amp#27;[90m# features/editProject.feature:6&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33ma project with project number "24001" exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mI update the project's name to "New Project Name"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe project's name should be "New Project Name"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Edit Project - Try to edit a non-existing project" classname="Edit Project" time="0.002">
    <error message="The step &apos;no project with project number &quot;99999&quot; exists&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;no project with project number {string} exists&quot;)&#10;public void noProjectWithProjectNumberExists(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;I attempt to edit the project&quot;)&#10;public void iAttemptToEditTheProject() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;I should receive an error message saying {string}&quot;)&#10;public void iShouldReceiveAnErrorMessageSaying(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'no project with project number "99999" exists' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("no project with project number {string} exists")
public void noProjectWithProjectNumberExists(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I attempt to edit the project")
public void iAttemptToEditTheProject() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("I should receive an error message saying {string}")
public void iShouldReceiveAnErrorMessageSaying(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: Try to edit a non-existing project                        &amp#27;[90m# features/editProject.feature:11&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mno project with project number "99999" exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mI attempt to edit the project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mI should receive an error message saying "Project not found"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Edit Project - Successfully change project leader" classname="Edit Project" time="0.002">
    <error message="The step &apos;a project with project number &quot;24002&quot; exists&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;a project with project number {string} exists&quot;)&#10;public void aProjectWithProjectNumberExists(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;a user with ID {string} exists&quot;)&#10;public void aUserWithIDExists(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;I assign {string} as the new project leader&quot;)&#10;public void iAssignAsTheNewProjectLeader(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the project&apos;s leader ID should be {string}&quot;)&#10;public void theProjectSLeaderIDShouldBe(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'a project with project number "24002" exists' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("a project with project number {string} exists")
public void aProjectWithProjectNumberExists(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("a user with ID {string} exists")
public void aUserWithIDExists(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I assign {string} as the new project leader")
public void iAssignAsTheNewProjectLeader(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the project's leader ID should be {string}")
public void theProjectSLeaderIDShouldBe(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: Successfully change project leader         &amp#27;[90m# features/editProject.feature:16&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33ma project with project number "24002" exists&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36ma user with ID "huba" exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mI assign "huba" as the new project leader&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe project's leader ID should be "huba"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="An example - The example" classname="An example" time="0.002">
    <error message="The step &apos;an employer is logged in&apos; is undefined.&#10;You can implement this step using the snippet(s) below:&#10;&#10;@Given(&quot;an employer is logged in&quot;)&#10;public void anEmployerIsLoggedIn() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'an employer is logged in' is undefined.
You can implement this step using the snippet(s) below:

@Given("an employer is logged in")
public void anEmployerIsLoggedIn() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: The example            &amp#27;[90m# features/example.feature:3&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33man employer is logged in&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="User Login - User can login" classname="User Login" time="0.002">
    <failure message="expected: &lt;true&gt; but was: &lt;false&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: expected: <true> but was: <false>
	at hellocucumber.LoginLogoutSteps.the_user_with_the_id_exists(LoginLogoutSteps.java:31)
	at ✽.the user with the ID "bob" exists(file:///Users/alizeb/Desktop/Semester%204/Software%20engineering/software_proj/features/login.feature:7)
]]></failure>
    <system-out><![CDATA[
Scenario: User can login                           &amp#27;[90m# features/login.feature:5&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is not logged in&amp#27;[0m                  &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_not_logged_in()&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mthe user with the ID &amp#27;[0m&amp#27;[31m&amp#27;[1m"bob"&amp#27;[0m&amp#27;[31m exists&amp#27;[0m            &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_with_the_id_exists(java.lang.String)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:31)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:183)
	at hellocucumber.LoginLogoutSteps.the_user_with_the_id_exists(LoginLogoutSteps.java:31)
	at ✽.the user with the ID "bob" exists(file:///Users/alizeb/Desktop/Semester%204/Software%20engineering/software_proj/features/login.feature:7)
&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user logs in with the ID &amp#27;[0m&amp#27;[36m&amp#27;[1m"bob"&amp#27;[0m          &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_logs_in_with_the_id(java.lang.String)&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe user with the ID &amp#27;[0m&amp#27;[36m&amp#27;[1m"bob"&amp#27;[0m&amp#27;[36m is now logged in&amp#27;[0m &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_with_the_id_is_now_logged_in(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="User Login - user has the wrong password" classname="User Login" time="0.002">
    <system-out><![CDATA[
Scenario: user has the wrong password            &amp#27;[90m# features/login.feature:12&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is not logged in&amp#27;[0m                &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_not_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe user with the ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"carl"&amp#27;[0m&amp#27;[32m does not exist&amp#27;[0m &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_with_the_id_does_not_exist(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user logs in with the ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"carl"&amp#27;[0m       &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_logs_in_with_the_id(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe user is not logged in&amp#27;[0m                 &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_not_logged_in()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="User logout - User logs out" classname="User logout" time="0.002">
    <system-out><![CDATA[
Scenario: User logs out          &amp#27;[90m# features/logout.feature:5&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m    &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mthe user logs out&amp#27;[0m         &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_logs_out()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mthe user is not logged in&amp#27;[0m &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_not_logged_in()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User registers time spent on an activity successfully" classname="Register used time" time="0.006">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} registers {int} hours spent on date {string}&quot;)&#10;public void theUserRegistersHoursSpentOnDate(String string, Integer int1, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the system records {int} hours for {string} by {string} on {string} for the user {string}&quot;)&#10;public void theSystemRecordsHoursForByOnForTheUser(Integer int1, String string, String string2, String string3, String string4) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} registers {int} hours spent on date {string}")
public void theUserRegistersHoursSpentOnDate(String string, Integer int1, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the system records {int} hours for {string} by {string} on {string} for the user {string}")
public void theSystemRecordsHoursForByOnForTheUser(Integer int1, String string, String string2, String string3, String string4) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User registers time spent on an activity successfully                            &amp#27;[90m# features/register_Time.feature:18&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                              &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                       &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "Vict" registers 4 hours spent on date "2025-02-06"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe system records 4 hours for "Demo" by "Vict" on "2025-02-06" for the user "Vict"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User tries to register time for an activity they are not assigned to" classname="Register used time" time="0.004">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user {string} is not assigned to it&quot;)&#10;public void theUserIsNotAssignedToIt(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} tries to register {int} hours spent on {string} on date {string}&quot;)&#10;public void theUserTriesToRegisterHoursSpentOnOnDate(String string, Integer int1, String string2, String string3) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message {string} should be shown&quot;)&#10;public void anErrorMessageShouldBeShown(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user {string} is not assigned to it")
public void theUserIsNotAssignedToIt(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} tries to register {int} hours spent on {string} on date {string}")
public void theUserTriesToRegisterHoursSpentOnOnDate(String string, Integer int1, String string2, String string3) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message {string} should be shown")
public void anErrorMessageShouldBeShown(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User tries to register time for an activity they are not assigned to                   &amp#27;[90m# features/register_Time.feature:23&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                                    &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                             &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mGiven &amp#27;[0m&amp#27;[36mthe user "Huba" is not assigned to it&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "Huba" tries to register 2 hours spent on "Demo" on date "2025-02-06"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message "You are not allowed to register time for this activity" should be shown&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User registers time with invalid hours" classname="Register used time" time="0.003">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} tries to register {int} hours spent on {string} on Date {string}&quot;)&#10;public void theUserTriesToRegisterHoursSpentOnOnDate(String string, Integer int1, String string2, String string3) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message {string} should be shown&quot;)&#10;public void anErrorMessageShouldBeShown(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} tries to register {int} hours spent on {string} on Date {string}")
public void theUserTriesToRegisterHoursSpentOnOnDate(String string, Integer int1, String string2, String string3) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message {string} should be shown")
public void anErrorMessageShouldBeShown(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User registers time with invalid hours                                       &amp#27;[90m# features/register_Time.feature:28&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                          &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                   &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "Vict" tries to register -3 hours spent on "Demo" on Date "2025-02-06"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message "Invalid hours" should be shown&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User registers time with invalid date" classname="Register used time" time="0.003">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} tries to register {int} hours spent on {string} on date {string}&quot;)&#10;public void theUserTriesToRegisterHoursSpentOnOnDate(String string, Integer int1, String string2, String string3) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message {string} should be shown&quot;)&#10;public void anErrorMessageShouldBeShown(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} tries to register {int} hours spent on {string} on date {string}")
public void theUserTriesToRegisterHoursSpentOnOnDate(String string, Integer int1, String string2, String string3) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message {string} should be shown")
public void anErrorMessageShouldBeShown(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User registers time with invalid date                                       &amp#27;[90m# features/register_Time.feature:32&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                         &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                  &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "Vict" tries to register 4 hours spent on "Demo" on date "2025-02-06"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message "Invalid date" should be shown&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User registers time with missing hours" classname="Register used time" time="0.003">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} registers {string} hours spent on {string} on date {string}&quot;)&#10;public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message {string} should be shown&quot;)&#10;public void anErrorMessageShouldBeShown(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} registers {string} hours spent on {string} on date {string}")
public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message {string} should be shown")
public void anErrorMessageShouldBeShown(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User registers time with missing hours                               &amp#27;[90m# features/register_Time.feature:36&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                  &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                           &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "Vict" registers "" hours spent on "Demo" on date "2025-02-06"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message "Hours missing" should be shown&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User registers time with missing date" classname="Register used time" time="0.003">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} registers {string} hours spent on {string} on date {string}&quot;)&#10;public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message {string} should be shown&quot;)&#10;public void anErrorMessageShouldBeShown(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} registers {string} hours spent on {string} on date {string}")
public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message {string} should be shown")
public void anErrorMessageShouldBeShown(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User registers time with missing date                       &amp#27;[90m# features/register_Time.feature:40&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                         &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                  &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "Vict" registers "4" hours spent on "Demo" on date ""&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message "Date missing" should be shown&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User registers time with missing user" classname="Register used time" time="0.004">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} registers {string} hours spent on {string} on date {string}&quot;)&#10;public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message {string} should be shown&quot;)&#10;public void anErrorMessageShouldBeShown(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} registers {string} hours spent on {string} on date {string}")
public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message {string} should be shown")
public void anErrorMessageShouldBeShown(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User registers time with missing user                             &amp#27;[90m# features/register_Time.feature:44&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                               &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                        &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "" registers "4" hours spent on "Demo" on date "2025-02-06"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36man error message "User missing" should be shown&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - User registers time with non-0.5 hour value" classname="Register used time" time="0.003">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user {string} registers {string} hours spent on {string} on date {string}&quot;)&#10;public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the system rounds the hours up to {string} hours&quot;)&#10;public void theSystemRoundsTheHoursUpToHours(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the system records {string} hours for {string} on {string} for the user {string}&quot;)&#10;public void theSystemRecordsHoursForOnForTheUser(String string, String string2, String string3, String string4) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("the user {string} registers {string} hours spent on {string} on date {string}")
public void theUserRegistersHoursSpentOnOnDate(String string, String string2, String string3, String string4) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the system rounds the hours up to {string} hours")
public void theSystemRoundsTheHoursUpToHours(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the system records {string} hours for {string} on {string} for the user {string}")
public void theSystemRecordsHoursForOnForTheUser(String string, String string2, String string3, String string4) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: User registers time with non-0.5 hour value                               &amp#27;[90m# features/register_Time.feature:48&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                                       &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                                &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user "Vict" registers "5.4" hours spent on "Demo" on date "2025-02-06"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe system rounds the hours up to "5.5" hours&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe system records "5.5" hours for "Demo" on "2025-02-06" for the user "Vict"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Register used time - Test mock date is returned" classname="Register used time" time="0.003">
    <error message="The step &apos;there exists users with the following initials in the project&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;there exists users with the following initials in the project&quot;)&#10;public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the user creates an activity with the following informations&quot;)&#10;public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;the system date is mocked&quot;)&#10;public void theSystemDateIsMocked() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the system date should be {string}&quot;)&#10;public void theSystemDateShouldBe(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'there exists users with the following initials in the project' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("there exists users with the following initials in the project")
public void thereExistsUsersWithTheFollowingInitialsInTheProject(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the user creates an activity with the following informations")
public void theUserCreatesAnActivityWithTheFollowingInformations(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("the system date is mocked")
public void theSystemDateIsMocked() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the system date should be {string}")
public void theSystemDateShouldBe(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:116)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:111)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
]]></error>
    <system-out><![CDATA[
Scenario: Test mock date is returned                                &amp#27;[90m# features/register_Time.feature:55&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe user is logged in&amp#27;[0m                                       &amp#27;[90m# hellocucumber.LoginLogoutSteps.the_user_is_logged_in()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma project with ID &amp#27;[0m&amp#27;[32m&amp#27;[1m25001&amp#27;[0m&amp#27;[32m exists&amp#27;[0m                                &amp#27;[90m# hellocucumber.AddProjectLeaderSteps.a_project_with_id_exists(int)&amp#27;[0m
  &amp#27;[33mAnd &amp#27;[0m&amp#27;[33mthere exists users with the following initials in the project&amp#27;[0m
    | Huba |
    | Sore |
    | Vict |
    | Hamz |
    | Zoha |
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthe user creates an activity with the following informations&amp#27;[0m
    | Name | Description  | Budget Hours | Start Week | End Week | Start Year | End Year | Initials   |
    | Demo | Optimization | 150          | 3          | 6        | 2025       | 2025     | Sore, Vict |
  &amp#27;[36mGiven &amp#27;[0m&amp#27;[36mthe system date is mocked&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe system date should be "2025-05-03"&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>